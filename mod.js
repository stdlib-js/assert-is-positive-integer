// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
var t="function"==typeof Object.defineProperty?Object.defineProperty:null;var e=Object.defineProperty,r=Object.prototype,n=r.toString,o=r.__defineGetter__,i=r.__defineSetter__,u=r.__lookupGetter__,a=r.__lookupSetter__;var c=function(){try{return t({},"x",{}),!0}catch(t){return!1}}()?e:function(t,e,c){var l,f,b,p;if("object"!=typeof t||null===t||"[object Array]"===n.call(t))throw new TypeError("invalid argument. First argument must be an object. Value: `"+t+"`.");if("object"!=typeof c||null===c||"[object Array]"===n.call(c))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+c+"`.");if((f="value"in c)&&(u.call(t,e)||a.call(t,e)?(l=t.__proto__,t.__proto__=r,delete t[e],t[e]=c.value,t.__proto__=l):t[e]=c.value),b="get"in c,p="set"in c,f&&(b||p))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return b&&o&&o.call(t,e,c.get),p&&i&&i.call(t,e,c.set),t};function l(t,e,r){c(t,e,{configurable:!1,enumerable:!1,writable:!1,value:r})}function f(t){return"number"==typeof t}var b="function"==typeof Symbol&&"symbol"==typeof Symbol("foo");function p(){return b&&"symbol"==typeof Symbol.toStringTag}var y=Object.prototype.toString;var _=Object.prototype.hasOwnProperty;var v="function"==typeof Symbol?Symbol.toStringTag:"";var s=p()?function(t){var e,r,n,o,i;if(null==t)return y.call(t);r=t[v],i=v,e=null!=(o=t)&&_.call(o,i);try{t[v]=void 0}catch(e){return y.call(t)}return n=y.call(t),e?t[v]=r:delete t[v],n}:function(t){return y.call(t)},m=Number,j=m.prototype.toString;var d=p();function g(t){return"object"==typeof t&&(t instanceof m||(d?function(t){try{return j.call(t),!0}catch(t){return!1}}(t):"[object Number]"===s(t)))}function O(t){return f(t)||g(t)}l(O,"isPrimitive",f),l(O,"isObject",g);var S=Number.POSITIVE_INFINITY,P=m.NEGATIVE_INFINITY,h=Math.floor;function w(t){return t<S&&t>P&&h(e=t)===e;var e}function I(t){return f(t)&&w(t)}function N(t){return g(t)&&w(t.valueOf())}function T(t){return I(t)||N(t)}function E(t){return I(t)&&t>0}function V(t){return N(t)&&t.valueOf()>0}function A(t){return E(t)||V(t)}l(T,"isPrimitive",I),l(T,"isObject",N),l(A,"isPrimitive",E),l(A,"isObject",V);export{A as default,V as isObject,E as isPrimitive};
//# sourceMappingURL=mod.js.map
